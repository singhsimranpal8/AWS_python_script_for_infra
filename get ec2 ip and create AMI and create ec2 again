# for ec2 to image
import os
import boto3

ec2 = boto3.client('ec2')

response = ec2.describe_instances(
    Filters=[
          {
            'Name': 'ip-address',
            'Values': ['54.178.133.55']
        }
    ]
)

# Get the InstanceId of the first instance that matches the tag filter
instance_id = response['Reservations'][0]['Instances'][0]['InstanceId']
print("Instance ID:", instance_id)
public_ip = response['Reservations'][0]['Instances'][0]['PublicIpAddress']


#ec2 = boto3.resource('ec2')
ec2 = boto3.client('ec2')
instance = ec2.create_image(
    InstanceId=instance_id,
    Name='amitag',
    Description='this is the AMI created from the python'
)
ami_id = instance['ImageId']
waiter = ec2.get_waiter('image_available')
waiter.wait(Filters=[{'Name': 'image-id', 'Values': [ami_id]}])
print(f'AMI {ami_id} is now available.')

# for image to ec2
ec2_client = boto3.client('ec2')

# Launch EC2 instance
response = ec2_client.run_instances(
    ImageId=ami_id,  # Replace with your desired AMI ID
    InstanceType='t2.micro',
    KeyName='simran',  # Replace with the name of your key pair
    MinCount=1,
    MaxCount=1,
    UserData='''#!/bin/bash
                git -C /var/www/html/bizhub-cicd-testing pull git@github.com:simranpal-webkul/bizhub-cicd-testing.git staging''')


# Get the instance ID of the new instance
new_instance_id = response['Instances'][0]['InstanceId']
print(f"Instance ID: {new_instance_id}")
# Set up EC2 waiter
waiter = ec2_client.get_waiter('instance_running')

# Wait for instance to become active
waiter.wait(InstanceIds=[new_instance_id])

instance = ec2_client.describe_instances(InstanceIds=[new_instance_id])
print(f"Public IP address: {instance['Reservations'][0]['Instances'][0]['PublicIpAddress']}")
